<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.student.dao.StudentDao">

	<select id="get" resultType="com.bootdo.student.domain.StudentDO">
		select `id`,`user_id`,`stu_id` from user_student where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.student.domain.StudentDO">
		select us.`id`,us.`user_id`,us.`stu_id` ,u.name as stuName from user_student us
		left join sys_user u on u.user_id=us.stu_id
        <where>  
		  		  <if test="id != null and id != ''"> and us.id = #{id} </if>
		  		  <if test="userId != null and userId != ''"> and us.user_id = #{userId} </if>
		  		  <if test="stuId != null and stuId != ''"> and us.stu_id = #{stuId} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by us.id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from user_student
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="userId != null and userId != ''"> and user_id = #{userId} </if>
		  		  <if test="stuId != null and stuId != ''"> and stu_id = #{stuId} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.student.domain.StudentDO" useGeneratedKeys="true" keyProperty="id">
		insert into user_student
		(
			`user_id`, 
			`stu_id`
		)
		values
		(
			#{userId}, 
			#{stuId}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.student.domain.StudentDO">
		update user_student 
		<set>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="stuId != null">`stu_id` = #{stuId}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from user_student where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from user_student where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	<insert id="batchSave">
		INSERT INTO user_student(user_id, stu_id) values
		<foreach item="item" index="index" collection="list"
				 separator=",">
			(#{item.userId},#{item.stuId})
		</foreach>
	</insert>

</mapper>